name: Create Release with Wheel

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Extract tag
        run: echo "release_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/github-script@v7.0.1
        env:
          RELEASE_TAG: ${{ env.release_tag }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: process.env.RELEASE_TAG,
              name: process.env.RELEASE_TAG,
              draft: false,
              prerelease: false
            })
            core.setOutput('upload_url', response.data.upload_url)

  wheel:
    name: Build Wheel
    runs-on: ubuntu-22.04
    needs: release
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]   # 按需调整
        cuda-version: ["11.8"]                   # 按显卡驱动选择
        include:
          - cuda-version: "11.8"
            pytorch-version: "2.0.1+cu118"       # PyTorch 版本格式
          - cuda-version: "12.1"
            pytorch-version: "2.0.1+cu121"

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install CUDA ${{ matrix.cuda-version }}
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -y cuda-toolkit-${{ matrix.cuda-version }}

      - name: Install PyTorch
        run: pip install torch==${{ matrix.pytorch-version }} --extra-index-url https://download.pytorch.org/whl/cu${{ matrix.cuda-version }}

      - name: Build Wheel
        run: |
          pip install setuptools wheel
          python setup.py bdist_wheel
          mv dist/*.whl dist/$(ls dist/*.whl | sed 's/linux/manylinux2014/')

      - name: Upload Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/*.whl
          asset_name: ${{ github.repository }}_${{ env.release_tag }}_py${{ matrix.python-version }}_cu${{ matrix.cuda-version }}.whl
          asset_content_type: application/octet-stream